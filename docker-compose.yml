version: "2.0"
services:
  development:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: development
    env_file:
      - .env.development
    links:
      - grafana:grafana
      - kibana:kibana
    ports:
      - 3000:3000 # RAVEN
      - 3001:3001 # APPMETRICS DASHBOARD
      - 3002:3002 # MONITORING
      - 9229:9229 # INSPECT
    restart: always
  production:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    env_file:
      - .env.production
    links:
      - grafana:grafana
      - kibana:kibana
    ports:
      - 3000:3000 # RAVEN
      - 3002:3002 # MONITORING
    restart: always
  elasticsearch:
    environment:
      - discovery.type=single-node
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
    ports:
      - 9200:9200
      - 9300:9300
    restart: always
  kibana:
    image: docker.elastic.co/kibana/kibana:6.3.2
    links:
      - elasticsearch:elasticsearch
    ports:
      - 5601:5601
    restart: always
  prometheus:
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    image: quay.io/prometheus/prometheus
    ports:
      - 9090:9090
    restart: always
    volumes:
      - ./alert.rules:/etc/prometheus/alert.rules
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
  node-exporter:
    links:
      - prometheus:prometheus
    image: prom/node-exporter
    ports:
        - 9100:9100
  grafana:
    environment:
      # - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
      - GF_SECURITY_ADMIN_PASSWORD=pass
      # - GF_SERVER_ROOT_URL=http://localhost
    image: grafana/grafana
    links:
      - node-exporter:node-exporter
    ports:
      - 3003:3000
    restart: always
